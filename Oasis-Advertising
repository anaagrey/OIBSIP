{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1_lzNlfMmX0YvB6dfthollPOuJEsx4cZV","authorship_tag":"ABX9TyNom+L1FFU9qbFHzzCnzrn1"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":100,"metadata":{"id":"p_p-Q7JS56p_","executionInfo":{"status":"ok","timestamp":1711985927888,"user_tz":-330,"elapsed":7029,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"48ac18bc-3483-45b0-ae12-ab1d71b78e05"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (1.2.2)\n","Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.25.2)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.11.4)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.3.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (3.4.0)\n"]}],"source":["import pandas as pd\n","!pip install scikit-learn"]},{"cell_type":"code","source":["dataset = pd.read_csv('Advertising.csv')\n","dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Ew3eeV6k6Nls","executionInfo":{"status":"ok","timestamp":1711985930360,"user_tz":-330,"elapsed":15,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"ad43a68f-f6af-4534-ffb0-d5d40ee8d536"},"execution_count":101,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0     TV  Radio  Newspaper  Sales\n","0           1  230.1   37.8       69.2   22.1\n","1           2   44.5   39.3       45.1   10.4\n","2           3   17.2   45.9       69.3    9.3\n","3           4  151.5   41.3       58.5   18.5\n","4           5  180.8   10.8       58.4   12.9"],"text/html":["\n","  <div id=\"df-c49c6bf5-c94b-4472-bdb8-8061f3e4233f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>TV</th>\n","      <th>Radio</th>\n","      <th>Newspaper</th>\n","      <th>Sales</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>230.1</td>\n","      <td>37.8</td>\n","      <td>69.2</td>\n","      <td>22.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>44.5</td>\n","      <td>39.3</td>\n","      <td>45.1</td>\n","      <td>10.4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>17.2</td>\n","      <td>45.9</td>\n","      <td>69.3</td>\n","      <td>9.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>151.5</td>\n","      <td>41.3</td>\n","      <td>58.5</td>\n","      <td>18.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>180.8</td>\n","      <td>10.8</td>\n","      <td>58.4</td>\n","      <td>12.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c49c6bf5-c94b-4472-bdb8-8061f3e4233f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c49c6bf5-c94b-4472-bdb8-8061f3e4233f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c49c6bf5-c94b-4472-bdb8-8061f3e4233f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d0a91aaf-4a05-4a50-8105-0844e322d806\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d0a91aaf-4a05-4a50-8105-0844e322d806')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d0a91aaf-4a05-4a50-8105-0844e322d806 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 200,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57,\n        \"min\": 1,\n        \"max\": 200,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          96,\n          16,\n          31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 85.85423631490808,\n        \"min\": 0.7,\n        \"max\": 296.4,\n        \"num_unique_values\": 190,\n        \"samples\": [\n          287.6,\n          286.0,\n          78.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Radio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.846809176168724,\n        \"min\": 0.0,\n        \"max\": 49.6,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          8.2,\n          36.9,\n          44.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Newspaper\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.778620838522826,\n        \"min\": 0.3,\n        \"max\": 114.0,\n        \"num_unique_values\": 172,\n        \"samples\": [\n          22.3,\n          5.7,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.217456565710478,\n        \"min\": 1.6,\n        \"max\": 27.0,\n        \"num_unique_values\": 121,\n        \"samples\": [\n          11.4,\n          21.2,\n          12.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["dataset.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z4gCsu5R6ZR8","executionInfo":{"status":"ok","timestamp":1711985934354,"user_tz":-330,"elapsed":527,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"578dbb82-c0cd-47db-b9c4-dd5fc446cf51"},"execution_count":102,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 200 entries, 0 to 199\n","Data columns (total 5 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   Unnamed: 0  200 non-null    int64  \n"," 1   TV          200 non-null    float64\n"," 2   Radio       200 non-null    float64\n"," 3   Newspaper   200 non-null    float64\n"," 4   Sales       200 non-null    float64\n","dtypes: float64(4), int64(1)\n","memory usage: 7.9 KB\n"]}]},{"cell_type":"code","source":["dataset.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"OXZ1xSkE6e7_","executionInfo":{"status":"ok","timestamp":1711985937755,"user_tz":-330,"elapsed":564,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"55135e50-1937-432b-e3d8-77902dec0051"},"execution_count":103,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0          TV       Radio   Newspaper       Sales\n","count  200.000000  200.000000  200.000000  200.000000  200.000000\n","mean   100.500000  147.042500   23.264000   30.554000   14.022500\n","std     57.879185   85.854236   14.846809   21.778621    5.217457\n","min      1.000000    0.700000    0.000000    0.300000    1.600000\n","25%     50.750000   74.375000    9.975000   12.750000   10.375000\n","50%    100.500000  149.750000   22.900000   25.750000   12.900000\n","75%    150.250000  218.825000   36.525000   45.100000   17.400000\n","max    200.000000  296.400000   49.600000  114.000000   27.000000"],"text/html":["\n","  <div id=\"df-39f94aa7-7e07-4213-b237-b97dd7ef6608\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>TV</th>\n","      <th>Radio</th>\n","      <th>Newspaper</th>\n","      <th>Sales</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>200.000000</td>\n","      <td>200.000000</td>\n","      <td>200.000000</td>\n","      <td>200.000000</td>\n","      <td>200.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>100.500000</td>\n","      <td>147.042500</td>\n","      <td>23.264000</td>\n","      <td>30.554000</td>\n","      <td>14.022500</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>57.879185</td>\n","      <td>85.854236</td>\n","      <td>14.846809</td>\n","      <td>21.778621</td>\n","      <td>5.217457</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.700000</td>\n","      <td>0.000000</td>\n","      <td>0.300000</td>\n","      <td>1.600000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>50.750000</td>\n","      <td>74.375000</td>\n","      <td>9.975000</td>\n","      <td>12.750000</td>\n","      <td>10.375000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>100.500000</td>\n","      <td>149.750000</td>\n","      <td>22.900000</td>\n","      <td>25.750000</td>\n","      <td>12.900000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>150.250000</td>\n","      <td>218.825000</td>\n","      <td>36.525000</td>\n","      <td>45.100000</td>\n","      <td>17.400000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>200.000000</td>\n","      <td>296.400000</td>\n","      <td>49.600000</td>\n","      <td>114.000000</td>\n","      <td>27.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39f94aa7-7e07-4213-b237-b97dd7ef6608')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-39f94aa7-7e07-4213-b237-b97dd7ef6608 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-39f94aa7-7e07-4213-b237-b97dd7ef6608');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5f5a5bbe-7328-4e82-af68-81927fe89b58\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5f5a5bbe-7328-4e82-af68-81927fe89b58')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5f5a5bbe-7328-4e82-af68-81927fe89b58 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 71.77644232399086,\n        \"min\": 1.0,\n        \"max\": 200.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          200.0,\n          100.5,\n          150.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93.12930693433862,\n        \"min\": 0.7,\n        \"max\": 296.4,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          147.0425,\n          149.75,\n          200.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Radio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 64.62946191825954,\n        \"min\": 0.0,\n        \"max\": 200.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          23.264000000000006,\n          22.9,\n          200.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Newspaper\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67.53295876114069,\n        \"min\": 0.3,\n        \"max\": 200.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          30.553999999999995,\n          25.75,\n          200.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 66.68380930502316,\n        \"min\": 1.6,\n        \"max\": 200.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          14.0225,\n          12.9,\n          200.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["print(dataset['Sales'].value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qO5CjPWUIt3a","executionInfo":{"status":"ok","timestamp":1711985941807,"user_tz":-330,"elapsed":753,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"fddd3d13-ec1e-4bab-ea9e-3070c3b436b1"},"execution_count":104,"outputs":[{"output_type":"stream","name":"stdout","text":["9.7     5\n","11.7    4\n","12.9    4\n","15.9    4\n","20.7    3\n","       ..\n","17.0    1\n","18.3    1\n","22.3    1\n","14.0    1\n","25.5    1\n","Name: Sales, Length: 121, dtype: int64\n"]}]},{"cell_type":"code","source":["dataset['Sales'] = pd.cut(dataset['Sales'], bins=3, labels=['Low', 'Medium', 'High'])\n","print(dataset.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GEYRC_0WIyiy","executionInfo":{"status":"ok","timestamp":1711985945536,"user_tz":-330,"elapsed":517,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"82a0d24c-3fba-4bbc-c245-14fd41d0c334"},"execution_count":105,"outputs":[{"output_type":"stream","name":"stdout","text":["   Unnamed: 0     TV  Radio  Newspaper   Sales\n","0           1  230.1   37.8       69.2    High\n","1           2   44.5   39.3       45.1  Medium\n","2           3   17.2   45.9       69.3     Low\n","3           4  151.5   41.3       58.5  Medium\n","4           5  180.8   10.8       58.4  Medium\n"]}]},{"cell_type":"code","source":["X = dataset[['TV', 'Radio', 'Newspaper']]\n","y = dataset['Sales']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n","classifier = LogisticRegression()\n","classifier.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":213},"id":"vG_ga1PeI1l4","executionInfo":{"status":"ok","timestamp":1711985969089,"user_tz":-330,"elapsed":514,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"d067ca7d-d2e4-48ff-fb67-773c51376983"},"execution_count":106,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":106}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression"],"metadata":{"id":"TvSYF3NC6sQv","executionInfo":{"status":"ok","timestamp":1711985980873,"user_tz":-330,"elapsed":506,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}}},"execution_count":107,"outputs":[]},{"cell_type":"code","source":["print(classifier.predict(X_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xtlbzeAj8jYo","executionInfo":{"status":"ok","timestamp":1711985985381,"user_tz":-330,"elapsed":526,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"5852a142-7a39-4fc2-91a8-44fc82b64260"},"execution_count":108,"outputs":[{"output_type":"stream","name":"stdout","text":["['Low' 'Medium' 'Medium' 'Medium' 'Medium' 'Medium' 'Medium' 'Medium'\n"," 'Medium' 'Medium' 'Low' 'Low' 'Medium' 'Low' 'High' 'High' 'Low' 'Medium'\n"," 'High' 'Medium' 'Low' 'Medium' 'Medium' 'Medium' 'Medium' 'High' 'Low'\n"," 'Medium' 'Low' 'High' 'High' 'High' 'Medium' 'High' 'High' 'Medium'\n"," 'Medium' 'High' 'High' 'Low']\n"]}]},{"cell_type":"code","source":["y_pred = classifier.predict(X_test)"],"metadata":{"id":"X2fmwbbw8okn","executionInfo":{"status":"ok","timestamp":1711985992734,"user_tz":-330,"elapsed":595,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}}},"execution_count":109,"outputs":[]},{"cell_type":"code","source":["y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L1a_Noo_8rRx","executionInfo":{"status":"ok","timestamp":1711985995743,"user_tz":-330,"elapsed":564,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"8eb73648-ec81-4658-f545-b6631eadfebf"},"execution_count":110,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Low', 'Medium', 'Medium', 'Medium', 'Medium', 'Medium', 'Medium',\n","       'Medium', 'Medium', 'Medium', 'Low', 'Low', 'Medium', 'Low',\n","       'High', 'High', 'Low', 'Medium', 'High', 'Medium', 'Low', 'Medium',\n","       'Medium', 'Medium', 'Medium', 'High', 'Low', 'Medium', 'Low',\n","       'High', 'High', 'High', 'Medium', 'High', 'High', 'Medium',\n","       'Medium', 'High', 'High', 'Low'], dtype=object)"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["print(type(y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EcKVYcj1-CVQ","executionInfo":{"status":"ok","timestamp":1711986033358,"user_tz":-330,"elapsed":459,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"5670bf67-b1d0-422f-cd14-34ed16705f90"},"execution_count":111,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'numpy.ndarray'>\n"]}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nO_rnpV18zHD","executionInfo":{"status":"ok","timestamp":1711986037125,"user_tz":-330,"elapsed":764,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"64539119-58d4-45d8-cc1f-203598d03a63"},"execution_count":112,"outputs":[{"output_type":"execute_result","data":{"text/plain":["12        Low\n","88     Medium\n","114    Medium\n","2         Low\n","167    Medium\n","152    Medium\n","145    Medium\n","150    Medium\n","163    Medium\n","97     Medium\n","166       Low\n","182       Low\n","161    Medium\n","170       Low\n","101      High\n","36       High\n","72        Low\n","131    Medium\n","176      High\n","79     Medium\n","172       Low\n","26     Medium\n","18     Medium\n","197    Medium\n","51     Medium\n","28       High\n","155       Low\n","102    Medium\n","130       Low\n","139      High\n","185      High\n","69       High\n","168    Medium\n","141      High\n","193      High\n","123    Medium\n","148    Medium\n","52       High\n","0        High\n","22        Low\n","Name: Sales, dtype: category\n","Categories (3, object): ['Low' < 'Medium' < 'High']"]},"metadata":{},"execution_count":112}]},{"cell_type":"code","source":["probs_y=classifier.predict_proba(X_test)"],"metadata":{"id":"RhhhGS2BJPSG","executionInfo":{"status":"ok","timestamp":1711986050008,"user_tz":-330,"elapsed":521,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}}},"execution_count":113,"outputs":[]},{"cell_type":"code","source":["probs_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ys8-scgtJTJW","executionInfo":{"status":"ok","timestamp":1711983358583,"user_tz":-330,"elapsed":6,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"cc2bfb75-35ab-4a33-f394-c54a62151f15"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[9.59142956e-01, 1.69303841e-33, 4.08570442e-02],\n","       [2.46118031e-20, 6.38115992e-15, 1.00000000e+00],\n","       [1.20269859e-25, 9.99839958e-01, 1.60042071e-04],\n","       [7.21833346e-02, 8.90987148e-44, 9.27816665e-01],\n","       [2.00434914e-11, 2.88489471e-41, 1.00000000e+00],\n","       [2.98872753e-14, 5.93277972e-09, 9.99999994e-01],\n","       [2.18194337e-27, 3.93525030e-12, 1.00000000e+00],\n","       [1.64036774e-13, 2.63574299e-16, 1.00000000e+00],\n","       [2.76110664e-09, 2.53454973e-19, 9.99999997e-01],\n","       [9.99857470e-01, 7.52307713e-50, 1.42530377e-04],\n","       [4.68581915e-18, 1.46329967e-26, 1.00000000e+00],\n","       [1.61484417e-05, 1.07978126e-25, 9.99983852e-01],\n","       [1.43568231e-47, 1.00000000e+00, 3.39766761e-14],\n","       [9.88392271e-01, 8.24844908e-47, 1.16077287e-02],\n","       [4.15576754e-01, 4.62246582e-29, 5.84423246e-01],\n","       [1.68138502e-24, 1.67389167e-07, 9.99999833e-01],\n","       [7.86924586e-13, 7.46775297e-35, 1.00000000e+00],\n","       [9.26791193e-44, 9.99999990e-01, 1.03601237e-08],\n","       [2.94470155e-20, 5.98842833e-15, 1.00000000e+00],\n","       [1.35076809e-04, 3.34197382e-36, 9.99864923e-01],\n","       [9.34455533e-49, 1.00000000e+00, 7.10509917e-11],\n","       [9.99975269e-01, 2.98671047e-53, 2.47307880e-05],\n","       [8.00829690e-01, 5.69391573e-38, 1.99170310e-01],\n","       [6.93444217e-30, 1.13692766e-02, 9.88630723e-01],\n","       [1.24519730e-12, 1.65712185e-23, 1.00000000e+00],\n","       [6.68292865e-16, 2.43802914e-02, 9.75619709e-01],\n","       [9.99999994e-01, 2.37724124e-50, 6.12463217e-09],\n","       [3.21426170e-26, 9.96803858e-01, 3.19614191e-03],\n","       [9.99999942e-01, 1.48330289e-52, 5.78671597e-08],\n","       [9.99999593e-01, 7.06522003e-51, 4.07210144e-07],\n","       [5.33455795e-06, 3.65243186e-45, 9.99994665e-01],\n","       [6.20190519e-27, 9.97578479e-01, 2.42152133e-03],\n","       [9.08487629e-03, 3.40492597e-25, 9.90915124e-01],\n","       [1.46532049e-06, 9.72181216e-39, 9.99998535e-01],\n","       [1.59125237e-06, 1.34723998e-16, 9.99998409e-01],\n","       [7.31317613e-12, 1.29640769e-27, 1.00000000e+00],\n","       [3.44451239e-33, 9.99999425e-01, 5.74507050e-07],\n","       [2.31570114e-25, 9.99996615e-01, 3.38489499e-06],\n","       [4.85281354e-20, 2.90510240e-24, 1.00000000e+00],\n","       [2.59374121e-10, 1.09904153e-21, 1.00000000e+00]])"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["import numpy as np\n","probs_y = np.round(probs_y, 2)"],"metadata":{"id":"wIecmF0_JZr7","executionInfo":{"status":"ok","timestamp":1711986059169,"user_tz":-330,"elapsed":523,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}}},"execution_count":114,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","print(accuracy_score(y_test, y_pred))"],"metadata":{"id":"SmUk3Hjr8-RD","executionInfo":{"status":"ok","timestamp":1711986063130,"user_tz":-330,"elapsed":562,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"2f2c8c28-84dc-4e8d-a212-7eac791be8d0"},"execution_count":115,"outputs":[{"output_type":"stream","name":"stdout","text":["0.975\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","cm = confusion_matrix(y_test, y_pred)\n","print(cm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EZxZJIogKUys","executionInfo":{"status":"ok","timestamp":1711986070731,"user_tz":-330,"elapsed":502,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"6286f111-0a51-443f-fa78-ab9ee58d9ec4"},"execution_count":116,"outputs":[{"output_type":"stream","name":"stdout","text":["[[11  0  0]\n"," [ 0  9  1]\n"," [ 0  0 19]]\n"]}]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt"],"metadata":{"id":"GCpxpwHCKgGL","executionInfo":{"status":"ok","timestamp":1711986073989,"user_tz":-330,"elapsed":891,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}}},"execution_count":117,"outputs":[]},{"cell_type":"code","source":["ax = plt.axes()\n","df_cm = cm\n","sns.heatmap(df_cm, annot=True, annot_kws={\"size\": 30}, fmt='d',cmap=\"Blues\", ax = ax )\n","ax.set_title('Confusion Matrix')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"JVycEbF3KidH","executionInfo":{"status":"ok","timestamp":1711986079439,"user_tz":-330,"elapsed":626,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}},"outputId":"5fe93b0c-5421-428f-fbe5-a44cb28ced49"},"execution_count":118,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import pickle\n","modelfile=pickle.dump(classifier,open('/content/drive/MyDrive/Oasis_Advertising.pkl','wb'))"],"metadata":{"id":"f2f2XR4CU81r","executionInfo":{"status":"ok","timestamp":1711986427855,"user_tz":-330,"elapsed":1333,"user":{"displayName":"Anushka Gupta","userId":"00627601380626389125"}}},"execution_count":119,"outputs":[]}]}